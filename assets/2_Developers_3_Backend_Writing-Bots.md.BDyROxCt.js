import{_ as t,c as o,o as r,ag as a}from"./chunks/framework.BRQrZDXk.js";const p=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"2_Developers/3_Backend/Writing-Bots.md","filePath":"2_Developers/3_Backend/Writing-Bots.md"}'),n={name:"2_Developers/3_Backend/Writing-Bots.md"};function i(s,e,c,l,h,d){return r(),o("div",null,e[0]||(e[0]=[a('<p>For legacy documentation, please check the <a href="https://openlibrary.org/dev/docs/bots?v=12" target="_blank" rel="noreferrer">Open Library Archives</a>. Most Bot code now lives at <a href="https://github.com/internetarchive/openlibrary-bots" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary-bots</a></p><h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>Are you frustrated with the number of metadata mistakes on OpenLibrary editions, works, authors, etc? Do you notice the same problem happening over and over? Are you seeing a lot of duplicate Authors which should be merged or fake books which should be deleted? Are there books missing from OpenLibrary that you&#39;d like to import from other sources? These are jobs for <code>bot accounts</code>.</p><p>OpenLibrary <code>bot accounts</code> are used to make http POSTs to work, author, edition, subject, etc., pages in order to correct metadata or create/import new records (e.g. books, authors, bookcovers) in bulk.</p><h1 id="applying-for-a-bot-account" tabindex="-1">Applying for a <code>bot account</code> <a class="header-anchor" href="#applying-for-a-bot-account" aria-label="Permalink to &quot;Applying for a `bot account`&quot;">​</a></h1><p>Follow these 2 steps to apply for a privileged <code>bot account</code>:</p><ol><li>First, <a href="https://openlibrary.org/account/create" target="_blank" rel="noreferrer">register a new OpenLibrary account</a> which meets the following guidelines:</li></ol><ul><li>(a) Your <code>bot account</code> should be <strong>different</strong> from your personal OpenLibrary account</li><li>(b) the username of your new account should end with the word &quot;Bot&quot; (e.g. <code>WorkBot</code>, <code>ImportBot</code>).</li><li>These conventions allow us to <a href="https://openlibrary.org/recentchanges#bots" target="_blank" rel="noreferrer">monitor / filter through <code>Recent Changes</code> by <code>bot</code>s</a> to identify only those changes made by <code>bot account</code>s. (Since bots tend to repeat the same small operation with high frequency, they would overwhelm the list if shown alongside edits by humans.)</li></ul><ol start="2"><li>Open a github issue and ask a site <code>admin</code> (e.g. @mekarpeles or @hornc as of 2019) to set your account to have <code>bot</code> privileges and to <a href="http://openlibrary.org/usergroup/api?m=edit" target="_blank" rel="noreferrer">add your account to the <code>&quot;API&quot; usergroup</code></a></li></ol><h1 id="getting-started-rules" tabindex="-1">Getting Started: Rules <a class="header-anchor" href="#getting-started-rules" aria-label="Permalink to &quot;Getting Started: Rules&quot;">​</a></h1><p><strong>Question</strong> Great, I now have a bot account, I can start fixing thousands of problems I&#39;ve noticed, right?</p><p><strong>Answer</strong> Hold on! After you have been granted bot access, <em>please do not</em> run a bot script to change metadata in bulk (for more than 100 records) until it has first been reviewed by charles (@hornc on github). The right process is to create a new directory for your bot within the <a href="https://github.com/internetarchive/openlibrary-bots" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary-bots</a> repository, to open a PR, and to add charles (@hornc) or myself (@mekarpeles) as the reviewer.</p><hr><p><strong>Question</strong> I have a metadata question about how my bot should work, a question about using the openlibrary-client, or I need a code review for my bot. Who do I ask?</p><p><strong>Answer</strong> @hornc (@charles on slack) is our lead on metadata and is a great person to answer questions about the <code>openlibrary-client</code> and writing/registering <code>bots</code> to fix metadata or add new books to our catalog</p><hr><p><strong>Question</strong> I have written a bot, am I ready to run it?</p><p><strong>Answer</strong> If you have written a bot script and think it&#39;s ready to be run, the correct procedure is to fork the <a href="https://github.com/internetarchive/openlibrary-bots" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary-bots</a> repository, create a new branch for your bot, add a directory in the project named according to the action your bot will perform, and then submit a PR (pull request) for review. Please don&#39;t run bulk modifications until @horn or @mekarpeles have reviewed and approved your script or your bot privileges may be revoked.</p><hr><p><strong>Question</strong> My bot reads metadata from a source file and then modifies records on Open Library -- should these source data files be saved somewhere?</p><p><strong>Answer</strong> Yes please -- If you are writing a bot to add new or updated metadata to Open Library from a file(s), those files should also be committed with your script to <a href="https://github.com/internetarchive/openlibrary-bots" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary-bots</a></p><h1 id="openlibrary-client-library" tabindex="-1"><code>openlibrary-client</code> Library <a class="header-anchor" href="#openlibrary-client-library" aria-label="Permalink to &quot;`openlibrary-client` Library&quot;">​</a></h1><p>Instead of making POSTs to API endpoints directly using a <code>bot account</code>, the OpenLibrary community has created an official python client library called <a href="https://github.com/internetarchive/openlibrary-client" target="_blank" rel="noreferrer"><code>openlibrary-client</code></a> which streamlines the process of making metadata updates and writing <code>bot</code>s. <code>Bot</code>s used to be written using the <a href="http://github.com/internetarchive/openlibrary/blob/master/openlibrary/api.py" target="_blank" rel="noreferrer">http://github.com/internetarchive/openlibrary/blob/master/openlibrary/api.py</a> library, but this has been deprecated in favor of the much easier (and safer) <code>openlibrary-client</code>.</p><ul><li><a href="https://github.com/internetarchive/openlibrary-client" target="_blank" rel="noreferrer">Click here for instructions on installing and using the openlibrary-client</a>.</li></ul><h1 id="bot-account-etiquette" tabindex="-1"><code>Bot account</code> Etiquette <a class="header-anchor" href="#bot-account-etiquette" aria-label="Permalink to &quot;`Bot account` Etiquette&quot;">​</a></h1><p>If possible, <code>bot accounts</code> <strong>should not</strong> be used directly to make 1-off changes, e.g. from the command line. Changes instead should be coded into <code>bot scripts</code> (i.e. <code>bot</code>s) and checked in to the <a href="https://github.com/internetarchive/openlibrary-bots" target="_blank" rel="noreferrer">openlibrary-bots</a> repository. This way we can look back in time and see/figure out what exact changes were made (so we can debug if something goes wrong or if we have to modify or update and re-apply the logic).</p><h1 id="example-bots" tabindex="-1">Example <code>Bot</code>s <a class="header-anchor" href="#example-bots" aria-label="Permalink to &quot;Example `Bot`s&quot;">​</a></h1><p><a href="https://github.com/hornc/catharbot" target="_blank" rel="noreferrer">Here&#39;s an example by @hornc of a <code>bot</code> which uses <code>openlibrary-client</code> for merging works/editions and updating records in bulk</a>.</p><p>The following are <strong>legacy examples</strong> which used <code>api.py</code> (which is deprecated) instead of <code>openlibrary-client</code>, but they give an idea of what OpenLibrary <code>bot</code>s are, what they do, how they are written, and how they are used. Please refer to the <a href="https://github.com/internetarchive/openlibrary-client" target="_blank" rel="noreferrer">openlibrary-client documentation</a> for more modern examples:</p><ul><li><a href="http://github.com/dmontalvo/IdentifierBot/blob/master/fastadder.py" target="_blank" rel="noreferrer">Daniel&#39;s IdentifierBot</a></li><li><a href="https://github.com/internetarchive/openlibrary/blob/master/scripts/2010/04/import_goodreads_ids.py" target="_blank" rel="noreferrer">Ben&#39;s Goodreads bot</a></li><li><a href="http://openlibrary.org/people/AMillarBot" target="_blank" rel="noreferrer">AMillarBot</a></li><li><a href="http://openlibrary.org/people/oclcBot" target="_blank" rel="noreferrer">oclcBot, by Bruce Washburn</a></li></ul><h1 id="bot-opportunities" tabindex="-1"><code>Bot</code> Opportunities <a class="header-anchor" href="#bot-opportunities" aria-label="Permalink to &quot;`Bot` Opportunities&quot;">​</a></h1><p>Migrated to <a href="https://github.com/internetarchive/openlibrary/issues/2863" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/issues/2863</a></p><p>Also see <a href="https://github.com/internetarchive/openlibrary-bots/labels/Ideas%20for%20new%20bots" target="_blank" rel="noreferrer"><code>Ideas for new bots</code></a></p>',33)]))}const u=t(n,[["render",i]]);export{p as __pageData,u as default};
