import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.BRQrZDXk.js";const c=JSON.parse(`{"title":"Quick Start for Open Library's developers","description":"","frontmatter":{},"headers":[],"relativePath":"2_Developers/misc/OUTDATED-Getting-Started.md","filePath":"2_Developers/misc/OUTDATED-Getting-Started.md"}`),n={name:"2_Developers/misc/OUTDATED-Getting-Started.md"};function r(l,e,o,h,p,d){return i(),t("div",null,e[0]||(e[0]=[s(`<h1 id="quick-start-for-open-library-s-developers" tabindex="-1">Quick Start for Open Library&#39;s developers <a class="header-anchor" href="#quick-start-for-open-library-s-developers" aria-label="Permalink to &quot;Quick Start for Open Library&#39;s developers&quot;">​</a></h1><table tabindex="0"><thead><tr><th>**WARNING: This documentation is <em>very</em> out of date and needs to be re-written. Most of it is wrong, but some of it is right.</th></tr></thead></table><table tabindex="0"><thead><tr><th>If you&#39;re getting started, you likely want to take a look at our <a href="https://github.com/internetarchive/openlibrary/blob/master/CONTRIBUTING.md" target="_blank" rel="noreferrer">Contributor&#39;s Guide</a> or our <a href="https://github.com/internetarchive/openlibrary/tree/master/docker#readme" target="_blank" rel="noreferrer">Installation Manual</a></th></tr></thead></table><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#using-the-open-library-website">Using the Open Library Website</a><ul><li><a href="#logging-in">Logging In (As Admin)</a></li><li><a href="#admin-interface">Admin Interface</a></li><li><a href="#creating-users">Testing the site with different users</a></li><li><a href="#lending-and-borrowing">Lending &amp; Borrowing</a></li><li><a href="#configuration">Configuration</a></li></ul></li><li><a href="/openlibrary-docs/2_Developers/misc/Loading-Production-Book-Data.html">Importing Test Data</a> (moved)</li><li><a href="/openlibrary-docs/2_Developers/2_Frontend/Frontend-Guide.html">Frontend Developer&#39;s Guide</a> (moved)</li><li><a href="#backend-guide">Backend Developer&#39;s Guide</a><ul><li><a href="#memcache">Memcache</a></li><li><a href="#logs">Log Files</a></li><li><a href="#database">Database</a></li><li><a href="#recaptcha">reCAPTCHA v2</a></li></ul></li><li><a href="#faqs">FAQs</a></li><li><a href="#credits">Credits</a></li></ul><h2 id="getting-up-running" tabindex="-1">Getting Up &amp; Running <a class="header-anchor" href="#getting-up-running" aria-label="Permalink to &quot;Getting Up &amp; Running&quot;">​</a></h2><p>We use Docker at Open Library. Follow the instructions on <a href="https://github.com/internetarchive/openlibrary/tree/master/docker#readme" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/tree/master/docker#readme</a> first to get your local copy of Open Library up and running!.</p><h2 id="basic-developer-commands" tabindex="-1">Basic Developer Commands <a class="header-anchor" href="#basic-developer-commands" aria-label="Permalink to &quot;Basic Developer Commands&quot;">​</a></h2><h3 id="start" tabindex="-1">start <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start&quot;">​</a></h3><p>We use Docker at Open Library. These are some of the basic commands, refer <a href="https://github.com/internetarchive/openlibrary/tree/master/docker#readme" target="_blank" rel="noreferrer">here</a> for some more useful commands.</p><p>Starts all the Open Library services:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><p>Start a specific service:</p><p>The following command starts the <code>solr</code> service in the detached mode (in the background)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-deps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr</span></span></code></pre></div><p>Logs of the services can be found:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # replace &quot;web&quot; with any other service name to see that particular service&#39;s log</span></span></code></pre></div><h3 id="shell" tabindex="-1">shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;shell&quot;">​</a></h3><p>Start a bash shell inside the container:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # replace &quot;web&quot; with any other service name</span></span></code></pre></div><h3 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h3><p>Runs all the tests</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h2 id="using-the-local-open-library-website" tabindex="-1">Using the local Open Library Website <a class="header-anchor" href="#using-the-local-open-library-website" aria-label="Permalink to &quot;Using the local Open Library Website&quot;">​</a></h2><p><a name="logging-in"></a></p><h3 id="logging-in" tabindex="-1">Logging In <a class="header-anchor" href="#logging-in" aria-label="Permalink to &quot;Logging In&quot;">​</a></h3><p>You can log into the Open Library instance as an admin</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Username: openlibrary@example.com</span></span>
<span class="line"><span>Password: admin123</span></span></code></pre></div><p><a name="admin-interface"></a></p><h3 id="admin-interface" tabindex="-1">Admin Interface <a class="header-anchor" href="#admin-interface" aria-label="Permalink to &quot;Admin Interface&quot;">​</a></h3><p>For users with sufficient privileges, an admin interface is available at <a href="http://localhost:8080/admin" target="_blank" rel="noreferrer">http://localhost:8080/admin</a>.</p><p><a name="creating-users"></a></p><h3 id="testing-the-site-with-different-users" tabindex="-1">Testing the site with different users <a class="header-anchor" href="#testing-the-site-with-different-users" aria-label="Permalink to &quot;Testing the site with different users&quot;">​</a></h3><table tabindex="0"><thead><tr><th>**WARNING: This section is very out of date and needs to be re-written.</th></tr></thead></table><p>To view and test the site as a non-admin user:</p><ol><li>Log into your local dev instance (<a href="http://localhost:8080" target="_blank" rel="noreferrer">http://localhost:8080</a>) as the <a href="mailto:openlibrary@example.com" target="_blank" rel="noreferrer">openlibrary@example.com</a> admin user.</li><li>Enter the admin interface URL: <a href="http://localhost:8080/admin" target="_blank" rel="noreferrer">http://localhost:8080/admin</a> and select the <code>People</code> option (<a href="http://localhost:8080/admin/people" target="_blank" rel="noreferrer">http://localhost:8080/admin/people</a>)</li><li>Select the user <code>AccountBot</code> from the &quot;Recent Accounts&quot; table.</li><li>At the top of the user page (<a href="http://localhost:8080/admin/people/AccountBot" target="_blank" rel="noreferrer">http://localhost:8080/admin/people/AccountBot</a>) there will be two red buttons -- click on &quot;login as this user&quot;.</li></ol><p>You should now be logged in as a standard user, <code>AccountBot</code>, and will be able to make edits, but not delete items etc.</p><p>To add AccountBot to a specific usergroup, such as <code>librarians</code>:</p><p>As the admin user <a href="mailto:openlibrary@example.com" target="_blank" rel="noreferrer">openlibrary@example.com</a>;</p><ol><li>Open the <code>librarians</code> usergroup page in edit mode: <a href="http://localhost:8080/usergroup/librarians?m=edit" target="_blank" rel="noreferrer">http://localhost:8080/usergroup/librarians?m=edit</a></li><li>Add <code>/people/AccountBot</code> in the first &quot;Members&quot; slot and save the page.</li></ol><p>Now you should be able to login as AccountBot using the instructions above and operate as a librarian.</p><p><a name="lending-and-borrowing"></a></p><h3 id="lending-and-borrowing" tabindex="-1">Lending and Borrowing <a class="header-anchor" href="#lending-and-borrowing" aria-label="Permalink to &quot;Lending and Borrowing&quot;">​</a></h3><table tabindex="0"><thead><tr><th>**WARNING: This section is very out of date and needs to be re-written.</th></tr></thead></table><p>These instructions are fairly specific to Internet Archive staff who are administrating the Open Library service and who have access to the production olsystem repository.</p><p>It essentially enables your local developer repository to behave as if it were actually openlibrary.org, and thus sync with and to openlibrary.org&#39;s loans:</p><p>To enable lending on localhost check <a href="https://github.com/internetarchive/olsystem/blob/master/Readme.md#enabling-lending-on-localhost" target="_blank" rel="noreferrer">this</a></p><p><a name="configuration"></a></p><h3 id="configuring" tabindex="-1">Configuring <a class="header-anchor" href="#configuring" aria-label="Permalink to &quot;Configuring&quot;">​</a></h3><p>Various configuration options can be found in conf/openlibrary.yml</p><p>Add conf/openlibrary.yaml to .git/info/exclude so that any changes to the conf file do not show up as dirty on git.</p><p><strong>Book covers</strong></p><p>By default, uploading book covers will work in the local development environment, but some of the existing books might 404 for their covers. This is expected, since now actual images are included in the test database.</p><p>If you use copydocs (see below) to import books, these imported books will also 404 on their covers. For these, you can change <code>coverstore_public_url</code> in <code>conf/openlibrary.yml</code> to <a href="https://covers.openlibrary.org/" target="_blank" rel="noreferrer">https://covers.openlibrary.org/</a> . This will change the web page to fetch covers from production instead of your local environment.</p><p>Be sure to restart your dev instance after any configuration changes.</p><p><a name="importing-test-data"></a></p><h2 id="importing-test-data" tabindex="-1">Importing Test Data <a class="header-anchor" href="#importing-test-data" aria-label="Permalink to &quot;Importing Test Data&quot;">​</a></h2><p>This section moved <a href="/openlibrary-docs/2_Developers/misc/Loading-Production-Book-Data.html">here</a>.</p><p><a name="backend-guide"></a></p><h2 id="backend-guide" tabindex="-1">Backend Guide <a class="header-anchor" href="#backend-guide" aria-label="Permalink to &quot;Backend Guide&quot;">​</a></h2><p><a name="memcache"></a></p><h3 id="memcache" tabindex="-1">Memcache <a class="header-anchor" href="#memcache" aria-label="Permalink to &quot;Memcache&quot;">​</a></h3><ul><li>Infobase queries get cached in memcache. In the dev instance, there is a single-node memcache instance that you can test by connecting to it:</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> docker compose run </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm home python</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Python </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.5 (main, Jun </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">57</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Clang </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.6 (clang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1316.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.21.2.5)] on darwin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;help&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;copyright&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;credits&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;license&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> more information.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaml</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openlibrary.utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> olmemcache</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/openlibrary/conf/openlibrary-docker.yml&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_file:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     y = yaml.safe_load(in_file)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mc = olmemcache.Client(y[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;memcache_servers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>to <strong>GET</strong> the memcached entry:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mc.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/authors/OL18319A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{&quot;bio&quot;: {&quot;type&quot;: &quot;/type/text&quot;, &quot;value&quot;: &quot;Mark Twain, was an American author and humorist. Twain is noted for his novels Adventures of Huckleberry Finn (1884), which has been called </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;the Great American Novel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;, and The Adventures of Tom Sawyer (1876). He is extensively quoted. Twain was a friend to presidents, artists, industrialists, and European royalty. ([Source][1].)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">n[1]:http://en.wikipedia.org/wiki/Mark_Twain&quot;}, &quot;photograph&quot;: &quot;/static/files//697/OL2622189A_photograph_1212404607766697.jpg&quot;, &quot;name&quot;: &quot;Mark Twain&quot;, &quot;marc&quot;: [&quot;1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">u001faTwain, Mark,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">u001fd1835-1910.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">u001e&quot;], &quot;alternate_names&quot;: [&quot;Mark TWAIN&quot;, &quot;M. Twain&quot;, &quot;TWAIN&quot;, &quot;Twain&quot;, &quot;Twain, Mark (pseud)&quot;, &quot;Twain, Mark (Spirit)&quot;, &quot;Twain, Mark, 1835-1910&quot;, &quot;Mark (Samuel L. Clemens) Twain&quot;, &quot;Samuel Langhorne Clemens (Mark Twain)&quot;, &quot;Samuel Langhorne Clemens&quot;, &quot;mark twain &quot;], &quot;death_date&quot;: &quot;21 April 1910&quot;, &quot;wikipedia&quot;: &quot;http://en.wikipedia.org/wiki/Mark_Twain&quot;, &quot;created&quot;: {&quot;type&quot;: &quot;/type/datetime&quot;, &quot;value&quot;: &quot;2013-03-28T07:50:47.897206&quot;}, &quot;last_modified&quot;: {&quot;type&quot;: &quot;/type/datetime&quot;, &quot;value&quot;: &quot;2013-03-28T07:50:47.897206&quot;}, &quot;latest_revision&quot;: 1, &quot;key&quot;: &quot;/authors/OL18319A&quot;, &quot;birth_date&quot;: &quot;30 November 1835&quot;, &quot;title&quot;: &quot;(pseud)&quot;, &quot;personal_name&quot;: &quot;Mark Twain&quot;, &quot;type&quot;: {&quot;key&quot;: &quot;/type/author&quot;}, &quot;revision&quot;: 1}&#39;</span></span></code></pre></div><p>to <strong>DELETE</strong> a memcached entry:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mc.delete(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/authors/OL18319A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>You can also find memcached items using the Internet Archive ID (import <code>memcache</code> instead of <code>olmemecache</code>):</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaml</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> memcache</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;openlibrary.yml&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_file:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yaml.safe_load(in_file)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> memcache.Client(y[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;memcache_servers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mc.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ia.get_metadata-&quot;houseofscorpion00farmrich&quot;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a name="logs"></a></p><h3 id="logs" tabindex="-1">Logs <a class="header-anchor" href="#logs" aria-label="Permalink to &quot;Logs&quot;">​</a></h3><table tabindex="0"><thead><tr><th>**WARNING: This section is likely out of date and might need to be re-written.</th></tr></thead></table><ul><li><p>Logs for the upstart services will be in <code>/var/log/upstart/</code>.</p></li><li><p>The app server logs will be in <code>/var/log/upstart/ol-web.log</code>.</p></li></ul><p><a name="database"></a></p><h3 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">​</a></h3><ul><li><p>You should never work directly with the database, all the data are indeed managed by Open Library through <em>infobase</em>, but, if you are brave and curious, here you can find some useful info.</p></li><li><p>The first thing you have to know is that Open Library is based on a <a href="https://en.wikipedia.org/wiki/Triplestore" target="_blank" rel="noreferrer">triplestore</a> database running on <em>Postgres</em>.</p></li><li><p>To connect to the db run:</p></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">psql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary</span></span></code></pre></div><ul><li>All the OL’s entities are stored as things in the <code>thing</code> table.</li></ul><p>Every raw contains:</p><table tabindex="0"><thead><tr><th>id</th><th>key</th><th>type</th><th>latest_revision</th><th>created</th><th>last_modified</th></tr></thead></table><ul><li>It is useful identify the <code>id</code> of some particular types: <code>/type/author</code> <code>/type/work</code> <code>/type/edition</code> <code>/type/user</code></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">openlibrary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> key=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/type/author&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> key=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/type/edition&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> key=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/type/work&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> key=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/type/user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>this query returns something like:</p><table tabindex="0"><thead><tr><th>id</th><th>key</th><th>type</th><th>latest_revision</th><th>created</th><th>last_modified</th></tr></thead><tbody><tr><td>17872418</td><td>/type/work</td><td>1</td><td>14</td><td>2008-08-18 22:51:38.685066</td><td>2010-08-09 23:37:25.678493</td></tr><tr><td>22</td><td>/type/user</td><td>1</td><td>5</td><td>2008-03-19 16:44:20.354477</td><td>2009-03-16 06:21:53.030443</td></tr><tr><td>52</td><td>/type/edition</td><td>1</td><td>33</td><td>2008-03-19 16:44:24.216334</td><td>2009-09-22 10:44:06.178888</td></tr><tr><td>58</td><td>/type/author</td><td>1</td><td>11</td><td>2008-03-19 16:44:24.216334</td><td>2009-06-29 12:35:31.346997</td></tr></tbody></table><ul><li>to count the <strong>authors</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openlibrary=# SELECT count(*) as count FROM thing WHERE type=&#39;58&#39;;</span></span></code></pre></div><ul><li>to count the <strong>works</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openlibrary=# SELECT count(*) as count FROM thing WHERE type=&#39;17872418&#39;;</span></span></code></pre></div><ul><li>to count the <strong>editions</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openlibrary=# SELECT count(*) as count FROM thing WHERE type=&#39;52&#39;;</span></span></code></pre></div><ul><li>to count the <strong>users</strong>:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openlibrary=# SELECT count(*) as count FROM thing WHERE type=&#39;22&#39;;</span></span></code></pre></div><p><a name="recaptcha"></a></p><h2 id="database-migrations" tabindex="-1">Database Migrations <a class="header-anchor" href="#database-migrations" aria-label="Permalink to &quot;Database Migrations&quot;">​</a></h2><table tabindex="0"><thead><tr><th>**WARNING: This section is very out of date and needs to be re-written.</th></tr></thead></table><p>Occasionally, new tables get added to the Open Library database and some existing tables get altered. Scripts are provided to migrate the existing dev instances to the new schema.</p><p>To migrate an existing dev instance:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ python setup.py shell</span></span>
<span class="line"><span>$ python scripts/migrate_db.py</span></span></code></pre></div><p>This will look at the current database schema, identify its version, and upgrade it to the latest version.</p><p><a name="using-the-open-library-website"></a></p><h3 id="recaptcha" tabindex="-1">Recaptcha <a class="header-anchor" href="#recaptcha" aria-label="Permalink to &quot;Recaptcha&quot;">​</a></h3><table tabindex="0"><thead><tr><th>**WARNING: This section is likely out of date and might need to be re-written.</th></tr></thead></table><ul><li><p>Currently, we use reCAPTCHA v2, which validates users based on the &quot;I&#39;m not a robot&quot; checkbox.</p></li><li><p>To develop with reCAPTCHA v2 locally, for testing new user signups and edits that require a user to prove they are human, you will need to <a href="https://www.google.com/recaptcha/admin#list" target="_blank" rel="noreferrer">sign up for a reCAPTCHA API key pair</a> from Google Developers (Google account required): <code>https://developers.google.com/recaptcha/docs/display</code></p></li><li><p>On the <em>Manage your reCAPTCHA v2 API keys</em> page under <em>Register a new site</em> enter the following values:</p></li></ul><table tabindex="0"><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td><strong>Label</strong></td><td><em>Local OL dev</em></td></tr><tr><td><strong>Domains</strong></td><td><em>0.0.0.0</em></td></tr></tbody></table><ul><li><p>All reCAPTCHA v2 API keys work for local testing, so you do not need to enter the actual OpenLibrary domain. For example, <code>0.0.0.0</code> will work for the purpose of local development:</p></li><li><p>Once you have generated the keys, add them to your local <code>conf/openlibrary.yml</code> file by filling in the public and private keys under the <code>plugin_recaptcha</code> section.</p></li><li><p>From within the Docker container, restart the Open Library service via <code>sudo systemctl restart ol-web</code>. You can simply run <code>docker compose restart</code> as well for the same.</p></li></ul><h3 id="caching" tabindex="-1">Caching <a class="header-anchor" href="#caching" aria-label="Permalink to &quot;Caching&quot;">​</a></h3><p>The home page is cached by default. To clear the cache of any page in cache run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker compose restart memcached</span></span></code></pre></div><h2 id="faqs" tabindex="-1">FAQs <a class="header-anchor" href="#faqs" aria-label="Permalink to &quot;FAQs&quot;">​</a></h2><p><strong>Question:</strong> Why do I hit a 404-page on local when the page shows up on openlibrary.org site?</p><p><strong>Answer:</strong> Check out the answer for this here: <a href="https://github.com/internetarchive/openlibrary/issues/1864" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/issues/1864</a></p><hr><p><strong>Question:</strong> What should I do to find the endpoints/files relating to the components I want to contribute to?</p><p><strong>Answer:</strong> <a href="https://dev.openlibrary.org/developers/routes" target="_blank" rel="noreferrer">https://dev.openlibrary.org/developers/routes</a> - can be found here</p><p><strong>Issue link:</strong> For a full description see: <a href="https://github.com/internetarchive/openlibrary/issues/1865" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/issues/1865</a></p><hr><p><strong>Question:</strong> What should I do when book covers won&#39;t load locally?</p><p><strong>Answer:</strong> This can be resolved by going to conf/openlibrary.yml and changing <code>coverstore_url</code> to <a href="https://covers.openlibrary.org" target="_blank" rel="noreferrer">https://covers.openlibrary.org</a></p><p><strong>Issue link:</strong> For a full description see: <a href="https://github.com/internetarchive/openlibrary/issues/1897" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/issues/1897</a></p><h2 id="credits" tabindex="-1">Credits <a class="header-anchor" href="#credits" aria-label="Permalink to &quot;Credits&quot;">​</a></h2><p>And special thanks</p><ul><li><a href="https://github.com/rajbot" target="_blank" rel="noreferrer">rajbot</a></li><li><a href="https://github.com/gdamdam" target="_blank" rel="noreferrer">gdamdam</a></li><li><a href="https://github.com/anandology" target="_blank" rel="noreferrer">anandology</a></li><li><a href="https://github.com/bfalling" target="_blank" rel="noreferrer">bfalling</a></li><li><a href="https://github.com/mekarpeles" target="_blank" rel="noreferrer">mekarpeles</a></li><li><a href="https://github.com/salman-bhai" target="_blank" rel="noreferrer">salman-bhai</a></li></ul>`,123)]))}const g=a(n,[["render",r]]);export{c as __pageData,g as default};
