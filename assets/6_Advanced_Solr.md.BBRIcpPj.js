import{_ as a,c as i,o as s,ag as t}from"./chunks/framework.BRQrZDXk.js";const k=JSON.parse('{"title":"Docs from GIO - Updating the Search Engine (notes by: Anand Chitipothu)","description":"","frontmatter":{},"headers":[],"relativePath":"6_Advanced/Solr.md","filePath":"6_Advanced/Solr.md"}'),r={name:"6_Advanced/Solr.md"};function n(o,e,l,h,p,d){return s(),i("div",null,e[0]||(e[0]=[t(`<h2 id="open-library-solr-search-tech-guide" tabindex="-1">Open Library Solr/Search Tech Guide <a class="header-anchor" href="#open-library-solr-search-tech-guide" aria-label="Permalink to &quot;Open Library Solr/Search Tech Guide&quot;">​</a></h2><h3 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h3><ul><li><a href="https://openlibrary.org/dev/docs/api/search" target="_blank" rel="noreferrer">Public <strong>Book Search API</strong> Documentation</a></li><li><a href="./Solr.html#improving-search-accuracy">Tuning &amp; Improving Search Accuracy</a><ul><li><a href="https://docs.google.com/spreadsheets/d/1BN5I7-OkTPaoTr2Es6jQ4O9ICWFmH0q9CP6kEgolCgg/edit#gid=1006480604" target="_blank" rel="noreferrer">Search Tuning Evaluation Spreadsheet</a> &amp; <a href="https://codepen.io/cdrini/full/wvJqzaK" target="_blank" rel="noreferrer">Side-by-side comparison</a> (codepen)</li><li><a href="https://github.com/internetarchive/openlibrary/blob/dc49fddb78a3cb25138922790ddd6a5dd2b5741c/openlibrary/plugins/worksearch/schemes/works.py#L439-L448" target="_blank" rel="noreferrer">Parameter Boosting</a></li></ul></li><li><a href="https://github.com/internetarchive/openlibrary/tree/master/scripts/solr_builder#readme" target="_blank" rel="noreferrer">Re-indexing Solr Guide</a> (solr-builder)</li><li><a href="https://blog.openlibrary.org/2022/12/21/search-is-getting-smarter-on-open-library/" target="_blank" rel="noreferrer">Smarter Search Blog Post</a> (2022)</li></ul><h3 id="solr-on-open-library" tabindex="-1">Solr on Open Library <a class="header-anchor" href="#solr-on-open-library" aria-label="Permalink to &quot;Solr on Open Library&quot;">​</a></h3><p><a href="https://solr.apache.org/" target="_blank" rel="noreferrer">Apache Solr</a> is used to power the search box, but is also used internally by the system and is intrinsic to the correct operation of the system. Some examples of places that it&#39;s used include:</p><ul><li>Searching and search results!</li><li>Enumerating the list of works for an author</li><li>Autocomplete by author name when editing a work and selecting authors</li><li>Various &quot;top&quot; things like the top items to list in a carousel, an author&#39;s top work or subjects, etc.</li></ul><p>Proper operation of the Open Library Solr instance requires that it be updated when authors, works, and editions are edited or the search index will not correctly reflect the underlying database.</p><p>If you&#39;re looking to re-index solr, go here: <a href="https://github.com/internetarchive/openlibrary/tree/master/scripts/solr_builder#solr-reindex-from-ol-dump" target="_blank" rel="noreferrer">https://github.com/internetarchive/openlibrary/tree/master/scripts/solr_builder#solr-reindex-from-ol-dump</a></p><h3 id="improving-search-accuracy" tabindex="-1">Improving Search Accuracy <a class="header-anchor" href="#improving-search-accuracy" aria-label="Permalink to &quot;Improving Search Accuracy&quot;">​</a></h3><p>To make a change to the solr search results algorithm, this likely entails adjusting the <a href="https://github.com/internetarchive/openlibrary/blob/dc49fddb78a3cb25138922790ddd6a5dd2b5741c/openlibrary/plugins/worksearch/schemes/works.py#L439-L448" target="_blank" rel="noreferrer">boosting parameters</a>, updating the <a href="https://docs.google.com/spreadsheets/d/1BN5I7-OkTPaoTr2Es6jQ4O9ICWFmH0q9CP6kEgolCgg/edit#gid=1006480604" target="_blank" rel="noreferrer">evaluation spreadsheet</a>, and using the <a href="https://codepen.io/cdrini/full/wvJqzaK" target="_blank" rel="noreferrer">Side-by-side comparison (codepen)</a> to evaluate the results.</p><h3 id="expected-behavior-and-timings" tabindex="-1">Expected behavior and timings <a class="header-anchor" href="#expected-behavior-and-timings" aria-label="Permalink to &quot;Expected behavior and timings&quot;">​</a></h3><p>Changes to the Solr index are visible on the live Open Library site in no more than about 1 minute. The updater script looks for document changes in the Infobase logs at <code>http://localhost:7000/openlibrary.org/log</code> logic to update Solr accordingly.</p><p>The updater script checks for updates every <a href="https://github.com/internetarchive/openlibrary/blob/0748d2ab0db7966fd82b0a84572edac293e08d24/scripts/new-solr-updater.py#L268" target="_blank" rel="noreferrer">5 seconds</a> and sends an update to Solr every <a href="https://github.com/internetarchive/openlibrary/blob/0748d2ab0db7966fd82b0a84572edac293e08d24/scripts/new-solr-updater.py#L198" target="_blank" rel="noreferrer">100 updates, or 60 seconds</a> whichever occurs first.</p><p>Here&#39;s a useful command for checking how far behind solr-updater is:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ol-home0:7000/openlibrary.org/log/$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec openlibrary-solr-updater-1 cat /solr-updater-data/solr-update.offset)?limit=1&quot;</span></span></code></pre></div><h3 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h3><h4 id="admin-force-solr-update-endpoint" tabindex="-1">Admin force Solr update endpoint <a class="header-anchor" href="#admin-force-solr-update-endpoint" aria-label="Permalink to &quot;Admin force Solr update endpoint&quot;">​</a></h4><p><a href="https://openlibrary.org/admin/solr" target="_blank" rel="noreferrer">https://openlibrary.org/admin/solr</a></p><p>Check the current value of the key populated by this endpoint that the updater script checks: <a href="https://openlibrary.org/admin/inspect/store?key=solr-force-update" target="_blank" rel="noreferrer">https://openlibrary.org/admin/inspect/store?key=solr-force-update</a></p><p><strong>NOTE:</strong> this key is currently overwritten each time the form is submitted, so it is possible the updater script won&#39;t get the values if there are sequential POSTs.</p><h4 id="solr-updater-script-stuck-in-an-infinite-loop" tabindex="-1">Solr updater script stuck in an infinite loop <a class="header-anchor" href="#solr-updater-script-stuck-in-an-infinite-loop" aria-label="Permalink to &quot;Solr updater script stuck in an infinite loop&quot;">​</a></h4><p>The <a href="https://github.com/internetarchive/openlibrary/blob/master/scripts/solr_updater.py" target="_blank" rel="noreferrer">scripts/solr_updater.py</a> file listens for edits from infogami, and updates the solr index accordingly.</p><ul><li>Forcing a restart if solr-updater stuck in restart loop:</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### NOTE THE DATE!! Set that to where you want to restart from.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary_solr-updater-data:/solr-updater-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary/olbase:latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;2022-06-06:0&quot; &gt; /solr-updater-data/solr-next-update.offset&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary_solr-updater-data:/solr-updater-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary/olbase:latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;2022-06-06:0&quot; &gt; /solr-updater-data/solr-update.offset&#39;</span></span></code></pre></div><h2 id="solr-development" tabindex="-1">Solr development <a class="header-anchor" href="#solr-development" aria-label="Permalink to &quot;Solr development&quot;">​</a></h2><h3 id="query-solr-directly-on-dev-instance" tabindex="-1">Query Solr directly on dev instance <a class="header-anchor" href="#query-solr-directly-on-dev-instance" aria-label="Permalink to &quot;Query Solr directly on dev instance&quot;">​</a></h3><p>Go to <a href="http://localhost:8983/" target="_blank" rel="noreferrer">http://localhost:8983/</a> to view the solr admin dashboard. You can experiment with raw queries by selecting the &quot;openlibrary&quot; core in the dropdown in the sidebar, and then clicking on query in the sidebar.</p><p><a href="http://localhost:8080/search.json?q=OL54120W" target="_blank" rel="noreferrer">http://localhost:8080/search.json?q=OL54120W</a> to see what is in solr now for any query.</p><h3 id="making-changes-to-solr-config" tabindex="-1">Making changes to solr config <a class="header-anchor" href="#making-changes-to-solr-config" aria-label="Permalink to &quot;Making changes to solr config&quot;">​</a></h3><p>If you are experimenting with making changes to core solr configuration, you will need to do the following to test your changes using the bash script instructions below.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Assume OL is running</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Make whatever changes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stop solr and remove its container and data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr-updater</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary-solr-1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary-solr-updater-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary_solr-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary_solr-updater-data</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Bring solr back up, and also run a full reindex -- now with your changes in place</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr-updater</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;make reindex-solr&#39;</span></span></code></pre></div><p>See also: <a href="https://github.com/internetarchive/openlibrary/blob/master/docker/README.md" target="_blank" rel="noreferrer">Docker Instructions</a></p><h3 id="adding-a-field-to-solr" tabindex="-1">Adding a Field to Solr <a class="header-anchor" href="#adding-a-field-to-solr" aria-label="Permalink to &quot;Adding a Field to Solr&quot;">​</a></h3><h4 id="_1-edit-the-managed-schema" tabindex="-1">1. Edit the Managed Schema <a class="header-anchor" href="#_1-edit-the-managed-schema" aria-label="Permalink to &quot;1. Edit the Managed Schema&quot;">​</a></h4><p>The <a href="https://github.com/internetarchive/openlibrary/blob/master/conf/solr/conf/managed-schema.xml" target="_blank" rel="noreferrer">managed-schema.xml</a> needs to be updated to include the new field. For example, we can add a field named &quot;record quality score.&quot; Add a new field definition for &quot;record quality score&quot; with the desired data type (in this case, &quot;pint&quot; for integer).</p><p>For example: <code>&lt;field name=&quot;record_quality_score&quot; type=&quot;pint&quot;/&gt;</code></p><h4 id="_2-modify-the-python-code" tabindex="-1">2. Modify the Python Code <a class="header-anchor" href="#_2-modify-the-python-code" aria-label="Permalink to &quot;2. Modify the Python Code&quot;">​</a></h4><p>The Python code responsible for indexing data into Solr needs to be updated to populate the &quot;record_quality_score&quot; field. This code is in <a href="https://github.com/internetarchive/openlibrary/blob/master/openlibrary/solr/update_work.py" target="_blank" rel="noreferrer">update_work.py</a>.</p><p>For example: <code>add(&#39;record_quality_score&#39;, compute_record_quality(work, editions))</code></p><p>Note: You likely should implement <code>compute_record_quality</code> in another file.</p><h4 id="_3-generate-types" tabindex="-1">3. Generate Types <a class="header-anchor" href="#_3-generate-types" aria-label="Permalink to &quot;3. Generate Types&quot;">​</a></h4><p><code>PYTHONPATH=$(PWD) python3 openlibrary/solr/types_generator.py</code> - run this and copy the output to <code>solr_types.py</code> to add the new field.</p><h4 id="_4-reindex-data" tabindex="-1">4. Reindex Data <a class="header-anchor" href="#_4-reindex-data" aria-label="Permalink to &quot;4. Reindex Data&quot;">​</a></h4><p>Once you have made the code changes, perform a full reindex to incorporate the new field.</p><h4 id="additional-considerations" tabindex="-1">Additional Considerations <a class="header-anchor" href="#additional-considerations" aria-label="Permalink to &quot;Additional Considerations&quot;">​</a></h4><ul><li>If you need to cross-reference data from external sources like archive.org or Wikidata, additional data retrieval steps may be required.</li><li>Keep in mind that the order of fields in your Solr schema can affect search results. Be aware of the field ordering if it&#39;s relevant to your change.</li></ul><p>See this video (<a href="https://archive.org/details/openlibrary-tour-2020/2022-01-10-openlibrary-adding-fields-to-solr-search-engine.mp4" target="_blank" rel="noreferrer">https://archive.org/details/openlibrary-tour-2020/2022-01-10-openlibrary-adding-fields-to-solr-search-engine.mp4</a>):</p><p><a href="https://archive.org/details/openlibrary-tour-2020/2022-01-10-openlibrary-adding-fields-to-solr-search-engine.mp4"><img width="641" alt="Screenshot 2023-10-06 at 9 44 45 AM" src="https://github.com/internetarchive/openlibrary/assets/978325/75f8dbfd-45f8-4ada-8d69-f3aea8d54f84"></a></p><h2 id="creating-a-solr-backup" tabindex="-1">Creating a Solr Backup <a class="header-anchor" href="#creating-a-solr-backup" aria-label="Permalink to &quot;Creating a Solr Backup&quot;">​</a></h2><p>Creates a <code>.tar.gz</code> file of the Solr index.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ol-home</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Stop solr-updater so that the index doesn&#39;t change while we make the backup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisorctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr-updater</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ol-solr2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tmux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Commit any pending docs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># check how many docs are pending</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8983/solr/admin/stats.jsp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pending</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ** This didn&#39;t work earlier! It took 7+ minutes, so we just abandoned it **</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8983/solr/update?commit=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Create the backup (~35 min on 8 May 2019; ~13 GB)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ol-home</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /1/solr-backups</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssh -A mek@ol-solr2 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sudo -uroot tar zcf - /var/lib/solr/data&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> backup-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. Restart Solr updater</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ol-home</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisorctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> solr-updater</span></span></code></pre></div><h1 id="docs-from-gio-updating-the-search-engine-notes-by-anand-chitipothu" tabindex="-1">Docs from GIO - Updating the Search Engine (notes by: Anand Chitipothu) <a class="header-anchor" href="#docs-from-gio-updating-the-search-engine-notes-by-anand-chitipothu" aria-label="Permalink to &quot;Docs from GIO - Updating the Search Engine (notes by: Anand Chitipothu)&quot;">​</a></h1><p>Open Library uses Apache Solr for providing search functionality to the website. The Solr instance maintains its index of all the items to be search in its data directory. This index is informally called a “search index”. All book, work and author records are stored in the same search engine.</p><h2 id="updating-the-search-engine" tabindex="-1">Updating the Search Engine <a class="header-anchor" href="#updating-the-search-engine" aria-label="Permalink to &quot;Updating the Search Engine&quot;">​</a></h2><p>Whenever a record is updated on Open Library, the corresponding entry in the search engine must be updated to get up-to-date results. Open Library has two different ways to update the search index:</p><h3 id="_1-the-manual-way" tabindex="-1">1. The Manual Way <a class="header-anchor" href="#_1-the-manual-way" aria-label="Permalink to &quot;1. The Manual Way&quot;">​</a></h3><p>The openlibrary/solr module has the <a href="https://github.com/internetarchive/openlibrary/blob/master/openlibrary/solr/update_work.py" target="_blank" rel="noreferrer">update_work.py</a> script for updating solr. Even though the script name is indicating only work, it can be used for updating even edition and author documents in solr.</p><p>To update a one or more entries manually: WARNING: be sure to use the right openlibrary.yml file…</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary/update_work.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary.yml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /books/OL123M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /works/OL234W</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /authors/OL45A</span></span></code></pre></div><p>By default, the script performs an commit to the Solr. Doing a commit ensures that the changes are flushed to the disk and available to search requests from now on. However, it is very expensive operation and takes more than 5 minutes (at the time of writing this).</p><p>To update the documents without out committing them, add <code>–nocommit</code> flag:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary/update_work.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openlibrary.yml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --nocommit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /books/OL123M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /works/OL234W</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /authors/OL45A</span></span></code></pre></div><h3 id="_2-the-solr-updater" tabindex="-1">2. The Solr Updater <a class="header-anchor" href="#_2-the-solr-updater" aria-label="Permalink to &quot;2. The Solr Updater&quot;">​</a></h3><p><a href="https://github.com/internetarchive/openlibrary/blob/master/scripts/solr_updater.py" target="_blank" rel="noreferrer">scripts/solr_updater.py</a>, is run as a daemon process. It listens for edits to the database and updates the corresponding documents in Solr.</p><p>Infobase, the system that handles the all the modifications to the system, maintains a log of all changes. Each modification is written to a log as a JSON entry. It also provides an API to access the log entries.</p><p>The solr updater script uses this API to retrieve modifications update the corresponding documents in solr (the search engine).</p><p>While this looks like a fair approach, the solr updater script can fail due to a bad record or unexpected data. When this happen, the solr updater dies and resumes from the same point. As such, it can get stuck in an infinite loop.</p><p>The current position of the log file consumed by the solr updated is maintained in a state file. The state file will be at /var/run/openlibrary/solr-update.offset, or another path passed to the solr updater script.</p><h2 id="the-updating-process" tabindex="-1">The Updating Process <a class="header-anchor" href="#the-updating-process" aria-label="Permalink to &quot;The Updating Process&quot;">​</a></h2><p>To understand what is involved in updating a record in solr, lets restrict to work search and try to visualize a work record with bunch of editions.</p><p>The work record should appear in search results, when any one the following terms are used in the search query:</p><ul><li>title of the work</li><li>title of any of its editions (could be in other languages)</li><li>ISBN or any other ID of the editions</li><li>name of the the authors</li><li>(and some more)</li></ul><p>To get all this information, the solr document needs information from the following sources:</p><ul><li>The work record from OL database</li><li>All the edition records belonged to that work</li><li>All the author records belonged to that work</li><li>Data about all the records which have been marked as redirect to any of the above records</li><li>IA metadata for each edition having a scan</li></ul><p>Getting these individually is inefficient. Some efforts have been made to speed this up by:</p><ol><li>batching requests</li><li>talking directly to the database (to avoid middle layer overhead)</li></ol><p>Author records have a similar flow.</p><h2 id="analyzing-queries" tabindex="-1">Analyzing Queries <a class="header-anchor" href="#analyzing-queries" aria-label="Permalink to &quot;Analyzing Queries&quot;">​</a></h2><p><code>/solr/#/openlibrary/analysis?analysis.fieldvalue=The%20Mar[…]tput=0&amp;analysis.query=the%20mark%20of%20the%20crown</code></p>`,79)]))}const u=a(r,[["render",n]]);export{k as __pageData,u as default};
