import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.BRQrZDXk.js";const d=JSON.parse('{"title":"The Magic Incantation","description":"","frontmatter":{},"headers":[],"relativePath":"Coding-Recipes.md","filePath":"Coding-Recipes.md"}'),t={name:"Coding-Recipes.md"};function l(p,s,h,k,r,o){return n(),a("div",null,s[0]||(s[0]=[e(`<ul><li><a href="#The-Magic-Incantation">Setup</a></li><li><a href="#Using-Cache">Caching a Function</a></li><li><a href="#Fetching-Things-in-Bulk">Fetching Things in Bulk</a></li></ul><h1 id="the-magic-incantation" tabindex="-1">The Magic Incantation <a class="header-anchor" href="#the-magic-incantation" aria-label="Permalink to &quot;The Magic Incantation&quot;">â€‹</a></h1><p>Any time you want to import and test open library code that needs access to web.ctx, you&#39;ll need to run a magic incantation ðŸ§™.</p><p>First, you need to exec into the docker container and launch python: <code>docker compose exec -it web python</code></p><p>Next, use the following incantation to load Open Library and launch a minimal headless app:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> web</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> infogami</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openlibrary.config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> load_config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/olsystem/etc/openlibrary.yml&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # prod</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/olsystem/etc/openlibrary.yml&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;config/openlibrary.yml&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # fallback to dev</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">load_config(path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">infogami._setup()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> infogami </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config</span></span></code></pre></div><h1 id="fetching-a-patron-s-s3-keys" tabindex="-1">Fetching a patron&#39;s S3 keys <a class="header-anchor" href="#fetching-a-patron-s-s3-keys" aria-label="Permalink to &quot;Fetching a patron&#39;s S3 keys&quot;">â€‹</a></h1><p>Most privileges actions/requests Open Library takes on behalf of a patron will require their s3 keys:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openlibrary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> accounts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openlibrary.accounts.model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenLibraryAccount</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logged_in_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> accounts.get_current_user()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logged_in_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logged_in_user.key.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">account </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenLibraryAccount.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s3_keys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> web.ctx.site.store.get(account._key).get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s3_keys&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h1 id="fetching-things-in-bulk" tabindex="-1">Fetching Things in Bulk <a class="header-anchor" href="#fetching-things-in-bulk" aria-label="Permalink to &quot;Fetching Things in Bulk&quot;">â€‹</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>keys = [&quot;/works/OL5285479W&quot;, &quot;/works/OL257943W&quot;, &quot;/works/OL27448W&quot;]</span></span>
<span class="line"><span>docs = web.ctx.site.get_many(keys)</span></span></code></pre></div><h1 id="privacy-settings" tabindex="-1">Privacy Settings <a class="header-anchor" href="#privacy-settings" aria-label="Permalink to &quot;Privacy Settings&quot;">â€‹</a></h1><p>How to determine, given a set of patron usernames, which have public reading logs / can be followed?</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>usernames = [&#39;mekBot&#39;, &#39;ScarTissue&#39;, &#39;seabelis&#39;, &#39;brewster&#39;, &#39;jachamp&#39;]</span></span>
<span class="line"><span>user_prefs = web.ctx.site.get_many([f&#39;/people/{username}/preferences&#39; for username in usernames])</span></span>
<span class="line"><span>followable = dict((user.key.split(&#39;/&#39;)[2], user.notifications.public_readlog == &#39;yes&#39;) for user in user_prefs)</span></span></code></pre></div><h1 id="currently-logged-in-patron" tabindex="-1">Currently Logged In Patron? <a class="header-anchor" href="#currently-logged-in-patron" aria-label="Permalink to &quot;Currently Logged In Patron?&quot;">â€‹</a></h1><p>The following must be called within a controller that has access to <code>web.ctx</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>user = accounts.get_current_user()</span></span></code></pre></div>`,17)]))}const g=i(t,[["render",l]]);export{d as __pageData,g as default};
